import{Z as p}from"./chunk-GYDYF5F3.js";import{d as g}from"./chunk-PD5VTTIY.js";import{ka as l,pa as m}from"./chunk-2NSPOFEK.js";var b=class d{constructor(t){this.api=t}getChanges(t,s){if(!t||!s)return{};let a=(r,e)=>{if(Array.isArray(r)&&Array.isArray(e))return r.length!==e.length?!1:r.every((n,i)=>a(n,e[i]));if(r&&e&&typeof r=="object"&&typeof e=="object"){let n=Object.keys(r),i=Object.keys(e);return n.length!==i.length?!1:n.every(o=>a(r[o],e[o]))}return r===e};return Object.keys(s).reduce((r,e)=>{let n=t[e],i=s[e];return i===""||i===null||i===void 0||Array.isArray(n)&&Array.isArray(i)&&n.length===0&&i.length===0||(n!==i&&(r[e]={old:n,new:i}),a(n,i)||(r[e]={old:n,new:i})),r},{})}directMainLog(t,s,a,r,e,n){this.api.post({module_name:a,message:r+" field has been "+e,action:e,module_id:t,form_id:s,module_type:n},"log/form-action").subscribe(i=>{i.statusCode})}logActivityOnUpdate(t,s,a,r,e,n,i,o,u){if(!t)return!1;console.log(s,"originalData"),console.log(a,"updatedData");let y=this.getChanges(s,a);if(Object.keys(y).length===0)return o&&o(),!0;let c={module_id:r,module_name:e,action:n,row_id:i,changes:y,module_type:u};return i===""&&delete c.row_id,this.api.post(c,"log/transaction-action").subscribe(f=>{f.statusCode}),!1}logActivityOnDelete(t,s,a,r,e,n){let i={module_id:t,module_name:s,action:a,row_id:r,message:`${e} Record with ID - ${r} `,module_type:n};this.api.post(i,"log/transaction-action").subscribe(o=>{o.statusCode})}logActivityOnImage(t,s,a,r,e){let n={module_id:t,module_name:s,action:a,row_id:r,message:`${e} record with ID - ${r} `};this.api.post(n,"log/transaction-action").subscribe(i=>{i.statusCode})}getLogs(t,s,a,r){let e={module_id:t};a&&(e.module_id=t,e.row_id=a),r&&(e.module_type=r),this.api.post(e,"log/read").subscribe(n=>{if(n.statusCode===200){let i=n.data.map(o=>({createdName:o.created_name,createdAt:new Date(o.created_at),changes:this.formatChanges(o.changes?o.changes:o.message)}));s(i)}})}formatChanges(t){if(t&&typeof t=="object"&&Object.keys(t).every(e=>!isNaN(Number(e))&&t[e]?.old&&t[e]?.new))return Object.keys(t).map(e=>{let n=t[e].old,i=t[e].new,o=Object.keys(n).find(c=>typeof n[c]=="string")||`Row ${e}`,u=n[o]||i[o]||`Row ${e}`;return Object.keys(n).filter(c=>n[c]!==i[c]).map(c=>`${u}: changed from ${this.stringifyValue(n[c])} to ${this.stringifyValue(i[c])}`).join("<br>")}).filter(Boolean).join("<br>");if(typeof t=="string")return t;let a=e=>{if(e==null||e==="")return"-";if(typeof e=="string"&&e.includes("T")&&e.includes("Z"))try{let n=new Date(e);return g(n,"d MMM yyyy","en-US")}catch{return e}return Array.isArray(e)?e.map(n=>n.product_name?n.product_name:n.name?n.name:JSON.stringify(n)).join(", "):typeof e=="object"?e.product_name?e.product_name:e.name?e.name:JSON.stringify(e):String(e)},r=(e,n)=>{let i=e.map(f=>f.product_name||f.name||JSON.stringify(f)),o=n.map(f=>f.product_name||f.name||JSON.stringify(f)),u=i.filter(f=>!o.includes(f)),y=o.filter(f=>!i.includes(f)),c="";return u.length&&(c+=`Last Value: <span class="text-danger">${u.join(", ")}</span><br>`),y.length&&(c+=`Updated Value: <span class="text-success">${y.join(", ")}</span><br>`),c||"No actual difference"};return t&&typeof t=="object"?Object.entries(t).map(([e,n])=>{let i=e.replace(/_/g," "),o=i.charAt(0).toUpperCase()+i.slice(1);return Array.isArray(n.old)&&Array.isArray(n.new)?`${o}: <br>${r(n.old,n.new)}`:`${o}: changed from 
                        <span class="text-danger">${a(n.old)}</span> to 
                        <span class="text-success">${a(n.new)}</span>`}).join("<br>"):""}stringifyValue(t){if(t==null||t==="")return"-";if(typeof t=="string"&&t.includes("T")&&t.includes("Z"))try{let s=new Date(t);return g(s,"d MMM yyyy","en-US")}catch{return t}return Array.isArray(t)?t.map(s=>s.product_name||s.name||JSON.stringify(s)).join(", "):typeof t=="object"?t.product_name||t.name||JSON.stringify(t):String(t)}logActivityOnUpdateArray(t,s,a,r,e,n,i,o,u){if(!t)return!1;let y=this.getChangesArray(s,a);if(Object.keys(y).length===0)return o&&o(),!0;let c={module_id:r,module_name:e,action:n,row_id:i,changes:y,module_type:u};return i===""&&delete c.row_id,this.api.post(c,"log/transaction-action").subscribe(f=>{f.statusCode}),!1}getChangesArray(t,s){if(Array.isArray(t)&&Array.isArray(s))return this.getArrayDifferences(t,s);let a={};for(let r in t)t[r]!==s[r]&&(a[r]={old:t[r],new:s[r]});return a}getArrayDifferences(t,s){let a={};return t.forEach((r,e)=>{let n=s[e],i={};for(let o in r)r[o]!==n?.[o]&&(i[o]={old:r[o],new:n?.[o]});Object.keys(i).length>0&&(a[e]={old:r,new:n})}),a}static \u0275fac=function(s){return new(s||d)(m(p))};static \u0275prov=l({token:d,factory:d.\u0275fac,providedIn:"root"})};export{b as a};
